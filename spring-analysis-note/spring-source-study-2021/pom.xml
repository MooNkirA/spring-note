<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.moon</groupId>
    <artifactId>spring-source-study-2021</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <description>
        Spring Framework 5.2.8.RELEASE 版本的源码学习案例工程(包括基础使用示例、涉及设计模式示例) - 2021年整理版本
        此示例项目示例只是配合源码断点调试学习，很多用法可能没有涉及，具体 Spring 框架的详细基础使用的案例，
        详见【spring-sample-annotation】与【springmvc-sample-annotation】工程
    </description>

    <modules>
        <module>spring-commmon</module>
        <module>00-spring-design-patterns</module>
        <module>01-spring-basic</module>
        <module>02-spring-contexts</module>
        <module>03-spring-xml-bean</module>
        <module>04-spring-xml-context-component-scan</module>
        <module>05-spring-BeanDefinitionRegistryPostProcessor</module>
        <module>00-spring-extension</module>
        <module>06-spring-event</module>
        <module>07-spring-getbean</module>
        <module>08-spring-getbean-autowired</module>
        <module>09-spring-beanpostprocessor</module>
        <module>10-spring-aware-interface</module>
        <module>11-spring-initializingbean</module>
        <module>12-spring-circular-reference</module>
        <module>13-spring-disposablebean</module>
        <module>14-spring-properties-resolve</module>
        <module>15-spring-properties-beanDefinitionRegistryPostProcessor</module>
        <module>16-spring-beanclass-placeholder</module>
        <module>17-spring-factorybean</module>
        <module>18-spring-bean-scope</module>
        <module>19-spring-anno-propertysource</module>
        <module>20-spring-anno-componentscan</module>
        <module>21-spring-anno-import</module>
        <module>22-spring-anno-conditional</module>
        <module>23-spring-anno-configuration</module>
        <module>24-spring-xml-aop</module>
        <module>25-spring-anno-aop</module>
        <module>26-spring-aop-targetsource</module>
    </modules>

    <!-- 版本号管理 -->
    <properties>
        <spring.version>5.2.8.RELEASE</spring.version>
        <lombok.version>1.18.4</lombok.version>
        <junit.version>4.13</junit.version>
        <slf4j.version>1.7.10</slf4j.version>
        <logback.version>1.1.2</logback.version>

        <!-- 本项目版本号 -->
        <module.version>1.0-SNAPSHOT</module.version>
        <!-- JAVA 版本 -->
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <!-- 版本控制 -->
    <dependencyManagement>
        <dependencies>
            <!-- spring framework 核心依赖 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Spring AOP 切面依赖 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Spring MVC 依赖 -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- junit测试框架 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <!-- 日志相关依赖 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- 工具框架 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!-- 项目其他模块 -->
            <dependency>
                <groupId>com.moon</groupId>
                <artifactId>spring-commmon</artifactId>
                <version>${module.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 公共依赖 -->
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- spring 框架输出日志的依赖包 -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <!--
                可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。
                可选依赖阻断依赖的传递性。
             -->
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <!-- 构建部分 -->
    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>